{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","goodHandleIncrement","neutralHandleIncrement","badHandleIncrement","className","css","container","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","p","Section","text","children","Notification","message","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedback","prevState","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,UAAY,qC,kBCAvED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,wB,iBCAhED,EAAOC,QAAU,CAAC,EAAI,wB,qICiCPC,EA9BS,SAAC,GAAD,IACtBC,EADsB,EACtBA,oBACAC,EAFsB,EAEtBA,uBACAC,EAHsB,EAGtBA,mBAHsB,OAKtB,sBAAKC,UAAWC,IAAIC,UAApB,UACE,wBAAQF,UAAWC,IAAIE,OAAQC,KAAK,SAASC,QAASR,EAAtD,kBAIA,wBACEG,UAAWC,IAAIE,OACfC,KAAK,SACLC,QAASP,EAHX,qBAQA,wBAAQE,UAAWC,IAAIE,OAAQC,KAAK,SAASC,QAASN,EAAtD,qB,gBCGWO,EArBI,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,MAAoC,IAA7BC,0BAA6B,MAAR,EAAQ,EAC5E,OACE,gCACE,mBAAGX,UAAWC,IAAIW,EAAlB,0BACA,0CAAaL,KAFf,IAE4B,uBAC1B,6CAAgBC,KAHlB,IAGkC,uBAChC,yCAAYC,KAJd,IAI0B,uBACxB,2CAAcC,KALhB,IAK8B,uBAC5B,uDAA0BC,EAA1B,a,gBCISE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACd,sBAAKf,UAAWC,IAAIC,UAApB,UACGY,GAAQ,sBAAMd,UAAWC,IAAIa,KAArB,SAA4BA,IACpCC,MCOUC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,8BACE,+BAAOA,OCAI,SAASC,IACtB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAcMC,EAAqB,WACzB,OAAON,EAAeE,EAAkBE,GAS1C,OACE,gCACE,cAAC,EAAD,CAASV,KAAK,wBAAd,SACE,cAAC,EAAD,CACEjB,oBA1BoB,WAC1BwB,GAAgB,SAACM,GAAD,OAAeA,EAAY,MA0BrC7B,uBAvBuB,WAC7ByB,GAAmB,SAACI,GAAD,OAAeA,EAAY,MAuBxC5B,mBApBmB,WACzB0B,GAAe,SAACE,GAAD,OAAeA,EAAY,UAuBxC,cAAC,EAAD,UACGD,IAAuB,EACtB,cAAC,EAAD,CACEnB,KAAMa,EACNZ,QAASc,EACTb,IAAKe,EACLd,MAAOgB,IACPf,mBAtBDiB,KAAKC,MACM,IAAfT,GAAuBA,EAAeE,EAAkBE,MAwBrD,cAAC,EAAD,CAAcP,QAAQ,2BCrDhC,IAYea,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35636d75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__NzitK\",\"container\":\"FeedbackOptions_container__dafkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__23XtN\",\"text\":\"Section_text__3Hm62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Statistics_p__1Ug15\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({\n  goodHandleIncrement,\n  neutralHandleIncrement,\n  badHandleIncrement,\n}) => (\n  <div className={css.container}>\n    <button className={css.button} type=\"button\" onClick={goodHandleIncrement}>\n      Good\n    </button>\n\n    <button\n      className={css.button}\n      type=\"button\"\n      onClick={neutralHandleIncrement}\n    >\n      Neutral\n    </button>\n\n    <button className={css.button} type=\"button\" onClick={badHandleIncrement}>\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  goodHandleIncrement: PropTypes.func.isRequired,\n  neutralHandleIncrement: PropTypes.func.isRequired,\n  badHandleIncrement: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage = 0 }) => {\n  return (\n    <div>\n      <p className={css.p}>Statistics: </p>\n      <span>Good: {good}</span> <br></br>\n      <span>Neutral: {neutral}</span> <br></br>\n      <span>Bad: {bad}</span> <br></br>\n      <span>Total: {total}</span> <br></br>\n      <span>Positive feedback: {positivePercentage} % </span>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Section.module.css\";\n\nconst Section = ({ text, children }) => (\n  <div className={css.container}>\n    {text && <span className={css.text}>{text}</span>}\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import css from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <div>\n    <span>{message}</span>\n  </div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n\n  const goodHandleIncrement = () => {\n    setGoodFeedback((prevState) => prevState + 1);\n  };\n\n  const neutralHandleIncrement = () => {\n    setNeutralFeedback((prevState) => prevState + 1);\n  };\n\n  const badHandleIncrement = () => {\n    setBadFeedback((prevState) => prevState + 1);\n  };\n\n  const countTotalFeedback = () => {\n    return goodFeedback + neutralFeedback + badFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round(\n      (goodFeedback * 100) / (goodFeedback + neutralFeedback + badFeedback)\n    );\n  };\n\n  return (\n    <div>\n      <Section text=\"Please leave feedback\">\n        <FeedbackOptions\n          goodHandleIncrement={goodHandleIncrement}\n          neutralHandleIncrement={neutralHandleIncrement}\n          badHandleIncrement={badHandleIncrement}\n        />\n      </Section>\n\n      <Section>\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            good={goodFeedback}\n            neutral={neutralFeedback}\n            bad={badFeedback}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\n// countPositiveFeedbackPercentage = () => {\n//     return Math.round((this.state.good * 100)/(this.state.good + this.state.neutral + this.state.bad))\n// }\n\n// render(){\n//     const total = this.countTotalFeedback();\n//     const positivePercentage = this.countPositiveFeedbackPercentage();\n\n// }\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}